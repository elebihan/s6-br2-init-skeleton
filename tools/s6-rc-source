#!/bin/sh
#
# s6-rc-source - manage s6-rc source directory
#
# Copyright (C) 2016 Eric Le Bihan <eric.le.bihan.dev@free.fr>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

__VERSION__=0.1.1

die() {
    echo "ERROR: $1" >&2
    exit $2
}

add_service() {

    if [ $# -ne 3 ]; then
        cat <<EOF
Usage: $(basename $0) add <service> <bundle> <directory>
EOF
        exit 4
    fi

    local service=$1
    local bundle=$2
    local src_dir=$3

    test -d "${src_dir}" || die "Invalid source directory" 5
    test -f "${src_dir}/${bundle}/contents" || die "Invalid bundle" 6

    local filename="${src_dir}/${bundle}/contents"

    if ! grep -q -e "^${service}$" "${filename}"; then
        echo "${service}" >> "${filename}"
    fi
}

del_service() {

    local pruning=no

    while [ $# -gt 3 ]; do
        case $1 in
            -p|--prune)
                pruning=yes
                ;;
            --)
                shift
                break
                ;;
            *)
                ;;
        esac
        shift
    done

    if [ $# -ne 3 ]; then
        cat <<EOF
Usage: $(basename $0) del [OPTIONS] <service> <bundle> <directory>

Options:
  -p    Prune service directory
EOF
        exit 4
    fi

    local service=$1
    local bundle=$2
    local src_dir=$3

    test -d "${src_dir}" || die "Invalid source directory" 5
    test -f "${src_dir}/${bundle}/contents" || die "Invalid bundle" 6

    sed -i -e "/^${service}$/d" "${src_dir}/${bundle}/contents"
}

_render_template() {
    cp -a $1 $2
    find $2 -type f -exec sed -i -e "s/@INSTANCE@/$3/g" {} \;
}

render_template() {

    local tpl_dir

    while [ $# -gt 4 ]; do
        case $1 in
            -t|--template-dir)
                tpl_dir=$2
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                ;;
        esac
    done

    if [ $# -ne 4 ]; then
        cat <<EOF
Usage: $(basename $0) render <template> <instance> <bundle> <directory>
EOF
        exit 4
    fi

    local template=$1
    local instance=$2
    local bundle=$3
    local src_dir=$4
    local service=$(echo "${template}" | sed "s/@/${instance}/g")

    if [ -z "${tpl_dir}" ]; then
        tpl_dir=$(dirname "${src_dir}")/template
    fi

    test -d "${src_dir}" || die "Invalid source directory" 5
    test -f "${src_dir}/${bundle}/contents" || die "Invalid bundle" 6
    test -d "${tpl_dir}/${template}" || die "Invalid template" 7

    _render_template "${tpl_dir}/${template}" \
                     "${src_dir}/${service}" \
                     "${instance}"
    if [ -d "${tpl_dir}/${template}-log" ]; then
        _render_template "${tpl_dir}/${template}-log" \
                         "${src_dir}/${service}-log" \
                         "${instance}"
    fi

    add_service "${service}" "${bundle}" "${src_dir}"
}

usage() {
    cat<<EOF
Usage: $(basename $0) [OPTIONS] command [argument, ...]

Options:
  -h        Show this help message
  -v        Show version information

Available commands:
  add       Add a new service to a bundle
  del       Delete a service from a bundle
  render    Create a new service from a template
EOF
}

while getopts "hv" option; do
    case ${option} in
        h)
            usage; exit 0
            ;;
        v)
            echo ${__VERSION__}; exit 0
            ;;
        *)
            die "Unknown option" 1
            ;;
    esac
done

shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
    usage
    exit 2
fi

command=$1
shift

case "${command}" in
    add)
        add_service "$@"
        ;;
    del)
        del_service "$@"
        ;;
    render)
        render_template "$@"
        ;;
    *)
        die "Unknown command '${command}'" 3
        ;;
esac

# vim: ts=4 sts=4 sw=4 et ai
